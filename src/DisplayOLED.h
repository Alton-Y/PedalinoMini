/*  __________           .___      .__  .__                   ___ ________________    ___
 *  \______   \ ____   __| _/____  |  | |__| ____   ____     /  / \__    ___/     \   \  \   
 *   |     ___// __ \ / __ |\__  \ |  | |  |/    \ /  _ \   /  /    |    | /  \ /  \   \  \  
 *   |    |   \  ___// /_/ | / __ \|  |_|  |   |  (  <_> ) (  (     |    |/    Y    \   )  )
 *   |____|    \___  >____ |(____  /____/__|___|  /\____/   \  \    |____|\____|__  /  /  /
 *                 \/     \/     \/             \/           \__\                 \/  /__/
 *                                                                (c) 2018 alf45star
 *                                                        https://github.com/alf45tar/Pedalino
 */

#include <SSD1306Wire.h>
#include <OLEDDisplayUi.h>

#define OLED_I2C_ADDRESS  0x3c
#define OLED_I2C_SDA      SDA
#define OLED_I2C_SCL      SCL

#define WIFI_LOGO_WIDTH   78
#define WIFI_LOGO_HEIGHT  64

const uint8_t WiFiLogo[] PROGMEM = {
  0x00, 0x00, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0xF8, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xC0, 0x0F, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xC0, 0x07, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
  0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x83, 0x0F,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x83, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xC3, 0x07, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xE0, 0xC1, 0x83, 0x03, 0xE0, 0x1F, 0x00, 0x00, 0x00,
  0x00, 0xE0, 0xC1, 0x83, 0x03, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE0,
  0xC1, 0xC3, 0x07, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xC1, 0x83,
  0x07, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF0,
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
  0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x3C, 0x30, 0xC0, 0xE1, 0x03, 0xF0, 0x87, 0x0F, 0x00, 0x00, 0x3C, 0x78,
  0xE0, 0xE3, 0x03, 0xF0, 0xC7, 0x0F, 0x00, 0x00, 0x3C, 0xF8, 0xF0, 0xE3,
  0x07, 0xF0, 0xCF, 0x0F, 0x00, 0x00, 0x78, 0xFC, 0xF0, 0xC1, 0x03, 0xF8,
  0x01, 0x0F, 0x00, 0x00, 0x78, 0xFC, 0xF0, 0xC0, 0x07, 0xF0, 0x00, 0x1F,
  0x00, 0x00, 0x78, 0xFC, 0x71, 0x80, 0x83, 0xF0, 0x00, 0x0F, 0x00, 0x00,
  0x78, 0xFE, 0x79, 0x80, 0xE3, 0xF1, 0x00, 0x0E, 0x00, 0x00, 0xF0, 0xFE,
  0x79, 0xC0, 0xE7, 0xF1, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0xDE, 0x79, 0x80,
  0xE3, 0xF1, 0x00, 0x0F, 0x00, 0x00, 0xF0, 0xCF, 0x3F, 0xC0, 0x07, 0xF0,
  0x00, 0x1F, 0x00, 0x00, 0xF0, 0xCF, 0x3F, 0xC0, 0x07, 0xF0, 0x00, 0x0E,
  0x00, 0x00, 0xE0, 0x87, 0x3F, 0x80, 0x03, 0xF0, 0x00, 0x0F, 0x00, 0x00,
  0xE0, 0x87, 0x1F, 0x80, 0x07, 0x70, 0x00, 0x1F, 0x00, 0x00, 0xE0, 0x07,
  0x1F, 0xC0, 0x0F, 0xF0, 0x00, 0x3F, 0x00, 0x00, 0xE0, 0x03, 0x1F, 0x80,
  0x1F, 0xF0, 0x00, 0x3E, 0x00, 0x00, 0xC0, 0x01, 0x0E, 0x80, 0x0F, 0xF0,
  0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1E, 0x3C, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0F, 0x1E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0F, 0x1E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
  0x1E, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x3E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x1E, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xE0, 0x07, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xFE, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
  0x83, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x0F,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xC0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x7F, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x3F, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x7F, 0x00, 0x00
};

#define BLUETOOTH_LOGO_WIDTH   44
#define BLUETOOTH_LOGO_HEIGHT  64

const uint8_t BluetoothLogo[] PROGMEM = {
  0x00, 0x00, 0x56, 0x05, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x3F, 0x00, 0x00,
  0x00, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x03, 0x00,
  0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
  0xC0, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x3F, 0x00,
  0xF0, 0xFF, 0xEF, 0xFF, 0x7F, 0x00, 0xF8, 0xFF, 0xE7, 0xFF, 0xFF, 0x00,
  0xF8, 0xFF, 0xC7, 0xFF, 0xFF, 0x00, 0xFC, 0xFF, 0x87, 0xFF, 0xFF, 0x01,
  0xFC, 0xFF, 0x0F, 0xFF, 0xFF, 0x01, 0xFC, 0xFF, 0x07, 0xFE, 0xFF, 0x03,
  0xFE, 0xFF, 0x0F, 0xFC, 0xFF, 0x03, 0xFE, 0xFF, 0x07, 0xF8, 0xFF, 0x03,
  0xFE, 0xFF, 0x07, 0xF0, 0xFF, 0x03, 0xFE, 0xFF, 0x87, 0xF0, 0xFF, 0x03,
  0xFF, 0xFF, 0x8F, 0xE1, 0xFF, 0x07, 0xFE, 0xFF, 0x87, 0xC1, 0xFF, 0x03,
  0xFE, 0xFF, 0x87, 0x83, 0xFF, 0x03, 0xFF, 0xE7, 0x8F, 0x07, 0xFF, 0x07,
  0xFE, 0xC3, 0x87, 0x0F, 0xFE, 0x03, 0xFE, 0x83, 0x87, 0x0F, 0xFE, 0x03,
  0xFF, 0x07, 0x87, 0x07, 0xFF, 0x03, 0xFE, 0x0F, 0x8E, 0x83, 0xFF, 0x07,
  0xFE, 0x1F, 0x84, 0xC1, 0xFF, 0x03, 0xFF, 0x3F, 0x80, 0xE0, 0xFF, 0x07,
  0xFE, 0x7F, 0x00, 0xF0, 0xFF, 0x03, 0xFE, 0xFF, 0x00, 0xF8, 0xFF, 0x07,
  0xFF, 0xFF, 0x01, 0xFC, 0xFF, 0x03, 0xFE, 0xFF, 0x03, 0xFE, 0xFF, 0x07,
  0xFE, 0xFF, 0x03, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0x03, 0xFE, 0xFF, 0x07,
  0xFE, 0xFF, 0x01, 0xFC, 0xFF, 0x03, 0xFE, 0x7F, 0x00, 0xF8, 0xFF, 0x07,
  0xFF, 0x3F, 0x00, 0xF0, 0xFF, 0x03, 0xFE, 0x3F, 0x84, 0xE0, 0xFF, 0x07,
  0xFE, 0x0F, 0x84, 0xC1, 0xFF, 0x03, 0xFF, 0x07, 0x8F, 0x83, 0xFF, 0x07,
  0xFE, 0x03, 0x87, 0x07, 0xFF, 0x03, 0xFE, 0xC3, 0x87, 0x0F, 0xFE, 0x07,
  0xFF, 0xC7, 0x8F, 0x0F, 0xFE, 0x03, 0xFE, 0xFF, 0x87, 0x07, 0xFF, 0x03,
  0xFE, 0xFF, 0x87, 0x83, 0xFF, 0x03, 0xFF, 0xFF, 0x8F, 0xC1, 0xFF, 0x07,
  0xFE, 0xFF, 0x87, 0xE1, 0xFF, 0x03, 0xFE, 0xFF, 0x87, 0xE0, 0xFF, 0x03,
  0xFE, 0xFF, 0x0F, 0xF0, 0xFF, 0x03, 0xFE, 0xFF, 0x07, 0xF8, 0xFF, 0x03,
  0xFE, 0xFF, 0x0F, 0xFC, 0xFF, 0x03, 0xFC, 0xFF, 0x07, 0xFE, 0xFF, 0x01,
  0xFC, 0xFF, 0x0F, 0xFF, 0xFF, 0x01, 0xF8, 0xFF, 0x87, 0xFF, 0xFF, 0x00,
  0xF8, 0xFF, 0x8F, 0xFF, 0xFF, 0x00, 0xF0, 0xFF, 0xC7, 0xFF, 0x7F, 0x00,
  0xE0, 0xFF, 0xE7, 0xFF, 0x7F, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0x1F, 0x00,
  0xC0, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
  0x00, 0xFE, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0x00, 0x00,
  0x00, 0xF0, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xEE, 0x07, 0x00, 0x00
};


const uint8_t activeSymbol[] PROGMEM = {
  B00000000,
  B00000000,
  B00011000,
  B00100100,
  B01000010,
  B01000010,
  B00100100,
  B00011000
};

const uint8_t inactiveSymbol[] PROGMEM = {
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00011000,
  B00011000,
  B00000000,
  B00000000
};

// Initialize the OLED display using Wire library
SSD1306Wire   display(OLED_I2C_ADDRESS, OLED_I2C_SDA, OLED_I2C_SCL);
OLEDDisplayUi ui(&display);


void display_init()
{
  display.init();
  display.flipScreenVertically();
  display.setContrast(255);

#ifndef NOWIFI
  display.clear();
  display.drawXbm((display.getWidth() - WIFI_LOGO_WIDTH) / 2, (display.getHeight() - WIFI_LOGO_HEIGHT) / 2, WIFI_LOGO_WIDTH, WIFI_LOGO_HEIGHT, WiFiLogo);
  display.display();
  delay(500);
#endif

#ifndef NOBLE
  display.clear();
  display.drawXbm((display.getWidth() - BLUETOOTH_LOGO_WIDTH) / 2, (display.getHeight() - BLUETOOTH_LOGO_HEIGHT) / 2, BLUETOOTH_LOGO_WIDTH, BLUETOOTH_LOGO_HEIGHT, BluetoothLogo);
  display.display();
  delay(500);
#endif
}